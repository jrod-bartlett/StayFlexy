@page "/"
@page "/StayFlexy"

<PageTitle>Display: Flexbox</PageTitle>

<div id="flexboxDemo">
    <div class="section elementsContainer">
        <small>Flexbox Parent</small>
        <div class="flexboxParent" style="@parentStyling">
            @for (int child = 1; child <= childrenStyling.Count; child++)
            {
                int temp = child;
                <div class="flexboxChild" id="@temp" style="@childrenStyling[temp]">
                    <p>flex element @temp</p>
                </div>
            }
        </div>
    </div>
    <div class="section userInputs">
        <div class="addRemoveBtns">
            <button class="addBtn" @onclick="addChildElement">Add New Child</button>
            <button class="removeBtn" @onclick="removeChildElement">Remove Element</button>
        </div>
        <ParentController @bind-Styling="@parentStyling"></ParentController>
        @for (int i = 1; i <= childrenStyling.Count; i++)
        {
            int temp = i;
            <ChildController @key="temp" StylingChanged="(val) => {updateChildStyling(val);}" Styling="@childrenStyling[temp]" ID="temp"></ChildController>
        }
    </div>
</div>

@code {
    private string parentStyling = "";
    private Dictionary<int, string> childrenStyling = new Dictionary<int, string>
    {
        { 1, "" }
    };

    private Dictionary<string, List<string>> flexboxParentCombos = new Dictionary<string, List<string>>
    {
        { "flex-flow", new List<string> { "flex-direction", "flex-wrap"} }
    };  

    private void addChildElement()
    {
        childrenStyling.Add(childrenStyling.Count + 1, "");
    }

    private void removeChildElement()
    {
        int lastElementKey = childrenStyling.Count;
        childrenStyling.Remove(lastElementKey);
    }

    private void updateChildStyling(int id, string newStyling)
    {
        childrenStyling[id] = newStyling;
        Console.WriteLine(childrenStyling.ToString());
    }

    private void updateChildStyling(KeyValuePair<int, string> newStyle)
    {
        childrenStyling.Remove(newStyle.Key);
        childrenStyling.Add(newStyle.Key, newStyle.Value);
        //childrenStyling[id] = newStyling;
        Console.WriteLine(childrenStyling.ToString());
    }
}